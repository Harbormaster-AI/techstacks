#macro( GitLab_Image_Declarations )
#end

#macro( GitLab_Service_Declarations )
#end

#macro( GitLab_Variable_Declarations )
#end

#macro( GitLab_Cache_Declaration )
#end

##----------------------------------------------
## GitLab_StageDeclarations
##----------------------------------------------
#macro( GitLab_Stage_Declarations )
stages:
  - build-and-test
#end##macro( GitLab_Stage_Declarations )

##----------------------------------------------
## GitLab_Before_Script 
##----------------------------------------------
#macro( GitLab_Before_Script )
before_script:
#instantiateCommandArrays()
#initializeGlobalCICDInitializationCommands()
#foreach( $command in $globalCICDInitialzationCommands )
    - $command
#end
#end

##----------------------------------------------
## GitLab_Stage_Definitions 
##----------------------------------------------
#macro( GitLab_Stage_Definitions )
build:
  stage: build-and-test
  script:
#initializeGlobalCICDBuildCommands()
#foreach( $command in $globalCICDBuildCommands )
    - $command   
#end
#if ( $aib.getParam( "kubernetes.inUse" ) == "true" )
    - cd terraform && chmod 777 terraform.sh && ./terraform.sh install
#end##if ( $aib.getParam( "kubernetes.inUse" ) == "true" )  
#end

##----------------------------------------------
## GitLab_After_Script
##----------------------------------------------
#macro( GitLab_After_Script )
#end

##----------------------------------------------
## GitLab_Artifacts 
##----------------------------------------------
#macro( GitLab_Artifacts )
  artifacts:
    paths:
      - ${appName}binary
#end##macro( GitLab_Artifacts )