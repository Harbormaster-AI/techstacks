#set( $dbType = ${aib.getParam( "go.dbType" )} )    
#set( $dbName = ${aib.getParam( "go.dbName" )} )
#set( $dbUserName = ${aib.getParam( "go.dbUserName" )} )
#set( $dbPassword = ${aib.getParam( "go.dbPassword" )} )

##----------------------------------------------
## CircleCI Docker Image Output
##----------------------------------------------
#macro( CircleCI_OutputDockerImageDecl )        
    # CircleCI Golang
    # db image
    docker:
      - image: circleci/#Go_Lang_Image()    
#if ( $dbType == "mysql" )
      - image: mysql:8.0
#else## assume postgres...but there are other options                  
      - image: postgres
#end##if ( $dbType == mysql )
 


#end##macro( CircleCI_OutputDockerImageDecl )

##----------------------------------------------
## CircleCI EnvVarAssignments
##----------------------------------------------
#macro( CircleCI_EnvVarAssignments )
        environment:
#if ( $dbType == "mysql" )
          MYSQL_ROOT_PASSWORD: $dbPassword
          MYSQL_DATABASE: $dbName
          MYSQL_USER: $dbUserName
          MYSQL_PASSWORD: $dbPassword
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
#elseif ( $dbType == "postgres" )                  
        # required env vars
          POSTGRES_DB: $dbName
          POSTGRES_USER: $dbUserName
          POSTGRES_PASSWORD: $dbPassword 
#end##if ( $dbType == mysql )
            TEST_RESULTS: /tmp/test-results # path to where test results will be saved    
#end##macro( CircleCI_EnvVarAssignments )