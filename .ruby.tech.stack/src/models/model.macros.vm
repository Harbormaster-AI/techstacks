####################################################################
## declare associations
####################################################################
#macro( declareAssociations $class )
#foreach( $association in $class.getAssociations() )
#set( $dependent = "" )
#set( $associativeClassObject = ${aib.getClassObject( $association.getType() )} )
#if( $associativeClassObject.isComposite() == true )
#set( $dependent = "dependent: :destroy // delete this" )
#end##if( $associativeClassObject.isComposite() == true )
#if( $association.isSingleValued() == true )
#if( $association.isNavigable() == false )
  belongs_to: ${association.getRoleName()}, class_name: '${association.getType()}' ${dependent}
#else
  has_one: ${association.getRoleName()}, class_name: '${association.getType()}'
#end##if( $association.isNavigable() == false )
#else##if( $association.isSingleValued() == true )
#if( $association.isBidirectional() == true )
  has_and_belongs_to_many :${association.getRoleName()}, class_name: '${association.getType()}'
#else
  has_many :${association.getRoleName()}, class_name: '${association.getType()}'
#end
#end##if( $association.isSingleValued() == true )
#end##foreach( $association in $class.getAssociations() )
#end##macro( declareAssociations )