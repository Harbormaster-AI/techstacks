#
# Standard DevOps project creation options.  
#
# Pay close attention to parameters that require values unique  
# to you, such as those for Git, Docker, and AWS.
#
# To use Git, Docker, and any provider, be sure to have created
# an account with each.  
#
# For Git, before generating the project be sure to create the 
# repository and designate as public before
#
# Minimally, anywhere you see an xxx, replace with your relevant value
#

project:
    name: Apollo GraphQL Demo
    description: Sample Apollog GraphQL project    
    techstack:
       name:                Apollo      
                                      # To see the list of available tech stacks on a Harbormaster instance using command:
                                      #     harbormaster_cli stack_list --output pretty

    model:
        name:             ./samples/models/company-model.yaml
                          # options:     Unique name of an existing model, a URL to a model file or Git repo, 
                          #                or full/relative path to a model file.
                          #
                          # To see the list of supported model types use command:
                          #      harbormaster_cli model_types_supported
                          #                          
                          # To see the list of available models on a Harbormaster instance use command:
                          #      harbormaster_cli model_list --output pretty
                          # 
                          # For JAR files and Git Repos with Java Files, include the root package names of the root package
#        javaRootPackageNames:
#          - com.freeport.bo    
#        primaryKeyPattern: _pojoName_Id # the pattern to look for when interrogating a POJO for a primary key field
                              # allowed values are a either a literal, ex: id OR 
                              # POJOName with a suffix, ex: _pojoName_Id will handle accountId, customerId, etc...                 

#
# DevOps Project Creation Options
#    	
    options:

#            
# Application parameters
#            
        application:
            name:                  apollodemo
            description:           Demo Apollo GraphQL project generated by Harbormaster
            author:                Dev Team
            email:                 xxxx.xxxxxxxxx@xxxxxxxx.com
            application logo URL:  ./img/turnstone.biologics.png
            company name:          Turnstone Biologics
            version:               0.0.1
            
#            
# Apollo parameters - See https://github.com/apollographql/apollo/
#            

        apollo:
            engine-api-key: service:xxxxxxxx:xxxxxxx 	# of the form service:<your-service-name>:<hash-from-apollo-engine>
            service:        xxxxxxxxx					# Apollo assigned service name
            pageSize:       20
            includeClient:  true
            clientType:     angular
            cacheInMemory:  true

                         
#            
# CI/CD parameters
#            
        cicd:
            platform:  codeship    # options:  codeship, circleci, jfrog.pipelines
                                   #           jenkins, azure, aws, gitlab, 
                                   #           bitbucket, github
            AES key:   xxxxx       # this is assigned per CodeShip project
            
#            
# Docker parameters
#            
        docker:
            inUse:        true
            userName:     tylertravismya
            password:     69cutlass
            orgName:      xxxxxxxxxx
            repo:         angular8demo
            tag:          latest
            host:         #empty uses docker hubd default
            
#
# Git repository parameters
#
        git:            
            name:        git_test_Apollo	# an arbitrary name, but for JFrog, this should be the name of the Git related integration
            username:    xxxxxxxxxxxx
            password:    xxxxxxxxxxxx
            repository:  Apollo
            tag:         latest
            host:        bitbucket.org            

#
# HashiCorp Terraform parameters
#
        terraform:
            inUse:             true	
            provider:          aws        # options: aws, google, azure, nutanix
            region:            us-east-1  # options: any cloud provider region
            ssh-fingerprint:   xxxxxx     # CircleCI requires this
            
            
            
#
# Kubernetes parameters: If not in use, and Terraform
#                        is in use, physical infrastructure
#                        will be provisioned on the provider
#
        kubernetes:
            inUse:              false
            host:               https://xxx.xxx.xxx.xxx
            project:            xxxxxxxxxxxxxxxxx
            region:             us-central1-a     # options: any provider region
            hostTarget:         google            # option: google, aws, azure, nutanix
            username:           admin
            password:           5UhfcIPAPsiPXklT  # value to assign
            exposeAsService:    true
            serviceType:        LoadBalancer      # options: LoadBalancer, NodePort, ClusterIP
            useSessionAffinity: true

            
#            
# Artifact repository for build dependencies and binaries            
#
        artifact-repo:
            inUse:              false
            type:				jfrog                  # options: nexus, jfrog
            userName:           xxxxxxxx
            password:           xxxxxxxx
            email:              xxxx.xxxxxx@xxxxxxx.com
            repoUrl:            http://xxx.xxx.xxx.xxx:8081/repository/npm-public

