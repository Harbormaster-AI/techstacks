#macro( determineArgsAsInput $class $varName $includeAssociations )
#set( $includePKs = false )
#set( $argsAsInput = "${varName}.get${className}Id()" )
#set( $attributes = ${class.getDirectAttributes( $includePKs )} )
#if ( $includeAssociations == true )
#set( $attributes = $class.getAttributesOrderedInHierarchy( $includePKs ) )
#end##if ( $includeAssociations == true )
#if ( $attributes.size() > 0 )
#set( $argsAsInput = "${argsAsInput},")
#end##if ( $attributres.size() > 0 )
#foreach( $attribute in $attributes )
#set( $name = $Utils.capitalizeFirstLetter( $attribute.getName() ) )
#set( $argsAsInput = "${argsAsInput}${varName}.get${name}()")
#set( $comma = "" )
#if ( $velocityCount < $attributes.size() )
#set( $comma = ", " )
#end##if ( $velocityCount < $attributes.size() )
#set( $argsAsInput = "${argsAsInput}${comma}")
#end##foreach( $attribute in foo )
${argsAsInput}#end##macro( determineArgsAsInput $class )

#macro( determineArgsAsAssignment $class $target $source $includeAssociations )
#set( $includePKs = false )
#set( $attributes = ${class.getDirectAttributes( $includePKs )} )
#if ( $includeAssociations == true )
#set( $attributes = $class.getAttributesOrderedInHierarchy( $includePKs ) )
#end##if ( $includeAssociations == true )
        ${target}.set${className}Id( ${source}.get${className}Id() );
#foreach( $attribute in $attributes )
#set( $name = $Utils.capitalizeFirstLetter( $attribute.getName() ) )
        ${target}.set${name}( ${source}.get${name}() );
#end##foreach( $attribute in $attributes )
#end##macro( determineArgsAsAssignment $class $target $source)