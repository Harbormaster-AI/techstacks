#macro( declareAggregateAttributes $class )
#set( $includePKs = false )
#foreach( $attribute in $class.getDirectAttributes( $includePKs ) )
#set( $attributeName = $Utils.lowercaseFirstLetter( $attribute.getName() ) )
#set( $attributeType = $attribute.getType() )
    private ${attributeType} ${attributeName};
#end###foreach( $attribute in $class.getDirectAttributes( $includePKs ) )
#end##macro( declareAggregateAttributes )

#macro( declareAggregateAssociations $class )
#foreach( $association in $class.getAssociations() )
#set( $associationType = $association.getType() )
#if( $aib.isValueObject( $associationType ) == false )## value objecst are treated as attribuetes in declareAggregateAttributes
#set( $associationName = $Utils.lowercaseFirstLetter( $association.getRoleName() ) )
#set( $defaultValue = "null" )
#set( $qualifier = "private ")
#if( $association.isMultivalued() == true )
#set( $associationType = "Set<${associationType}>" )
#set( $defaultValue = "new HashSet<>()" )
#end##if( $attribute.isMultivalued() == true )
    ${qualifier}${associationType} ${associationName} = $defaultValue;
#end##if( $aib.isFromValueObject( $associationType ) == false )
#end###foreach( $attribute in $class.getDirectAttributes( $includePKs ) )
#end##macro( applyAggregateAttributes )

#macro( applyAggregateAttributes $class $var $includeAssociations )
#set( $includePKs = false )
#set( $listToUse = $class.getDirectAttributes( $includePKs ) )
#if ( $includeAssociations == true )
#set( $listToUse = $class.getAttributesOrderedInHierarchy( $includePKs ) )
#end##if ( $includeAssociations == true )
#foreach( $attribute in $listToUse )
#set( $name = $Utils.lowercaseFirstLetter( $attribute.getName() ) )
        this.${name} = ${var}.get${Utils.capitalizeFirstLetter( $name )}();
#end###foreach( $attribute in $class.getDirectAttributes( $includePKs ) )
#end##macro( applyAggregateAttributes )