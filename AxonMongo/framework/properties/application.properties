#set( $appName = $aib.getApplicationNameFormatted() )
# The name of this app:
spring.application.name=${appName}-${spring.profiles.active}
server.port=${aib.getParam("axon-framework.server-port")}

# Debugging on
logging.level.io.axoniq.demo=debug

# The default profiles are "all of them"
spring.profiles.active=${aib.getParam("axon-framework.spring-profiles-active")}

# Database specifics
sprint.jpa.hibernate.dialect=${aib.getParam("axon-framework.jpa-hibernate-dialect")}
spring.datasource.url=${aib.getParam("axon-framework.datasource-url")}
spring.jpa.hibernate.ddl-auto=update

# Management endpoints inclusion
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*

axon.axonserver.enabled=${aib.getParam("axon-framework.use-axon-server")}
axon.axonserver.servers=${aib.getParam("axon-framework.axonserver-servers")}

# whether to fall back to http when no meta-data is available
axon.distributed.spring-cloud.fallback-to-http-get=true
# the URL on which to publish local data and retrieve from other nodes.
axon.distributed.spring-cloud.fallback-url=/message-routing-information

#snap shot thresholds are applied per class using the default value
#foreach( $aggregate in $aib.getClassesToGenerate() )
#set( $aggregateName = ${Utils.lowercaseFirstLetter( ${aggregate.getName()} )} )
#set( $aggregateSnapshotThreshold = $aib.getParam("axon-framework.default-snapshot-threshold" ) )
axon.aggregate.${aggregateName}.snapshot-threshold=${aggregateSnapshotThreshold}
#end##foreach( $aggregate = $aib.getClassesToGenerate() )

#snap shot thresholds are applied per aggregate using the custom defined value
#foreach( $aggregate in $aib.getAggregatesToGenerate() )
#set( $aggregateName = $aggregate.getName() )
#set( $aggregateThreshold = $aggregate.getSnapshotThreshold() )
axon.aggregate.${aggregateName}.snapshot-threshold=${aggregateSnapshotThreshold}
#end##foreach( $aggregate = $aib.getAggregatesToGenerate() )

# this configuration is recommended by AxonIQ, assign to message then general and events will use that value
#axon.serializer.messages=xstream
#axon.serializer.general=java
axon.serializer.events=jackson

# mongodb parameters
mongodb.connection.url=mongodb://${aib.getParam( "mongodb.host" )}:${aib.getParam( "mongodb.port" )}/${aib.getParam( "mongodb.database-name" )}
mongodb.database.name=${aib.getParam("mongodb.database-name")}
spring.data.mongodb.uuid-representation=standard


