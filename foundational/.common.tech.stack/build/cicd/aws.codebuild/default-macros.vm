##----------------------------------------------
## AWS Docker image build and push
##----------------------------------------------
#macro( AWS_DockerImageDeclaration )
#set( $dockerUserName = ${aib.getParam("docker.userName")} ) 
#set( $dockerPassword = ${aib.getParam("docker.password")} )
#set( $dockerOrgName = ${aib.getParam("docker.orgName")} )
#set( $dockerRepo = ${aib.getParam("docker.repo")} )
#set( $dockerTag = ${aib.getParam("docker.tag")} )
      - echo Building Docker Image...
      - cd ${CODEBUILD_SRC_DIR}
      - docker login --username ${dockerUserName} --password ${dockerPassword}
      - docker build -t ${dockerOrgName}/${dockerRepo}:${dockerTag} .
      - docker push ${dockerOrgName}/${dockerRepo}:${dockerTag} 
#end##macro( AWS_DockerImageDeclaration )

##----------------------------------------------
## Terraform job definition
##----------------------------------------------
#macro( AWS_TerraformJobDefinition )
#if ( $aib.getParam( "kubernetes.inUse" ) == "true" )
      - echo running terraform with an installation first
      - cd terraform && chmod 777 terraform.sh && ./terraform.sh install
#end##if ( $aib.getParam( "kubernetes.inUse" ) == "true" )      
#end##macro( AWS_TerraformJobDefinition )

##----------------------------------------------
## AWS Codebuild Install Phase Commands
##----------------------------------------------
#macro( AWS_CodeBuild_Install_Phase_Commands ) 
    commands:

#instantiateCommandArrays()
#initializeGlobalCICDInitializationCommands()
#foreach( $command  in $globalCICDInitialzationCommands )
      - $command 
#end##foreach( $key in $globalCICDInitialzationMaps.keySet() )
    finally:
      - echo Install phase complete...
#end##macro( AWS_CodeBuild_Install_Phase_Commands )

##----------------------------------------------
## AWS Codebuild Build Phase Commands
##----------------------------------------------
#macro( AWS_CodeBuild_Build_Phase_Commands )
    commands:
#initializeGlobalCICDBuildCommands()
#foreach( $command in $globalCICDBuildCommands )
      - $command 
#end##foreach( $key in $globalCICDInitialzationMaps.keySet() )
#end##macro( AWS_CodeBuild_Build_Phase_Commands )

