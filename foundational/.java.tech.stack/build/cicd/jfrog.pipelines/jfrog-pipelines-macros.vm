##----------------------------------------------
## JFrog_Pipelines_Build_Archive_FileSpec_Configuration
##----------------------------------------------

#macro( JFrog_Pipelines_Build_Archive_FileSpec_Configuration )
    # ==========================================================
    # File spec configuration
    # ========================================================== 
    configuration:
      
      sourceArtifactory:   ${buildArtifactIntegration}           # The name of the Artifactory Integration <required>
      pattern:             ${buildArtifactRepo}/**/**/${appName}*.jar    # Fhe application archive file to download <required>
      target:              target/                             # Where to download the file to <optional for download>
#end##macro( JFrog_Pipelines_Build_Archive_FileSpec_Configuration )

##----------------------------------------------
## Build type
##----------------------------------------------
#macro( BuildType )
MvnBuild#end


##----------------------------------------------
## Build configuration
##----------------------------------------------
#macro( BuildConfiguration )
          autoPublishBuildInfo:           true                # Publishes build info to Artifactory. Requires a BuildInfo resources in the outputResources list. Default is false.
          sourceLocation:                 .                   # The source code starts at the root directory
          mvnCommand:                     clean package       # Tells Maven to perform a clean then package the app
          forceXrayScan:                  true                # Forces an Xray scan after publishing to Artifactory
          failOnScan:                     true                # When set to  true, and  when the Xray Policy RuleFail Build  checkbox is checked, a failed Xray scan will result in a failure of the step
          deployerReleaseRepo:            ${buildArtifactRepo}    # Snapshot artifacts created by the MvnBuild are uploaded to this Artifactory repository
          deployerSnapshotRepo:           ${buildArtifactRepo}    # Release artifacts created by the MvnBuild are uploaded to this Artifactory repository.
          affinityGroup:                  shared_affinity_group # used to bind steps <optional>
          
          outputResources:
            - name:                       build_info  # Uses the defined Maven build info resource               
          
          inputResources:
            - name:                       git_repo         # Use the git_repo resource   
         
          environmentVariables:
              skipTests:                  "true"                # Determines if testing should be skipped or invoked during Maven packaging
              DATABASE_URL:               ${databaseUrl}        # if skipTests set to false, make sure the host name or ip address to running MySQL instance
              
          integrations:
            - name:                       ${buildArtifactIntegration}  # Must specify an Artifactory Integration <required>  
#end
            