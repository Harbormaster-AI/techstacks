entities:
    - name: "Company"
      data:
          - name: "name"
          - name: "type"
            type: "CompanyType"
          - name: "industry"
            type: "Industry"
          - name: "establishedOn"
          - name: "revenue"
            type: "Double"
      relations:
          - name: "divisions"
            type: "Division"
            multiplicity: "OneToMany"
          - name: "boardMembers"
            type: "Employee"
            multiplicity: "OneToMany"
            aliases:
            - addToCommandAlias: "promoteToBoardMemberCommand"
              addToEventAlias: "promotedToBoardMemberEvent"
              removeFromCommandAlias: "demoteFromBoardMemberCommand"
              removeFromEventAlias: "demomotedFromBoardMemberCommand"
          - name: "address"
            type: "Address"
            multiplicity: "OneToOne"
          - name: "billingAddress"
            type: "Address"
            multiplicity: "OneToOne"
      aliases:
          - createCommandAlias: "createCompanyCommand"
            createEventAlias: "createdCompanyEvent"
            updateCommandAlias: "refreshCompanyCommand"
            updateEventAlias: "refreshedCompanyEvent"
            deleteCommandAlias: "closeCompanyCommand"
            deleteEventAlias: "closedCompanyEvent"
    - name: "Division"
      data:
          - name: "name"
      relations:
          - name: "head"
            type: "Employee"
            multiplicity: OneToOne"
            aliases:
            - assignToCommandAlias: "promoteToDivisionHeadCommand"
              assignToEventAlias: "promotedToDivisionHeadEvent"
              unAssignFromCommandAlias: "demoteFromDivisionHeadCommand"
              unAssignFromEventAlias: "demomotedFromDivisionHeadCommand"            
          - name: "departments"
            type: "Department"
            multiplicity: "OneToMany"
    - name: "Department"
      data:
          - name: "name"
      relations:
          - name: "head"
            type: "Employee"
            multiplicity: OneToOne"
          - name: "employees"
            type: "Employee"
            multiplicity: "OneToMany"
    - name: "Employee"
      data:
          - name: "firstName"
          - name: "lastName"              
          - name: "type"
            type: "EmploymentType"

enums:
    - name: "CompanyType"
      data:
          - name: "S_Corp"
          - name: "LLC"
          - name: "C_Corp"
    - name: "EmploymentType"
      data:
          - name: "Manager"
          - name: "Board_Member"
          - name: "Team_Lead"
          - name: "Consultant"
          - name: "Vice_President"
          - name: "Sr_Mananager"
          - name: "Director"
          - name: "Engineer"
    - name: "Industry"
      data:
          - name: "Bank"
          - name: "Insurance"
          - name: "Manufacturer"
          - name: "Technology"
          - name: "Health"
          - name: "Financial"

valueObjects:
    - name: "Address"
      data:
          - name: "street"
          - name: "city"
          - name: "state"
          - name: "zipCode"
            type: "String"
            
messages:
      commands:
          - componentName: "CompanyAdvanced"
            affiliate: "Division"
            affiliateData: "employeeId"
            creationPolicy: "Always"
            handlers: 
              - name: "StartCompany"
              - name: "CloseCompany"
              - name: "TradeCompany"
      queries:
          - componentName: "CompanyHandling"
            affiliate: "Company"
            handlers:
              - name: "findByName"
                queryName: "findCompanyByName"
                type: "Normal"
                generateStubQueryHandler: "true"
                generateStubEventHandler: "true"
                inputArgs:
                  - name: "name"
                    type: "String"
                returnValue:
                  - type: "Company"
                    singleValue: "true"
              - name: "findCompaniesByIndustry"
                type: "Normal"
                scatterGatherTimeOut: "10"
                scatterGatherTimeUnit: "seconds"
                inputArgs:
                  - name: "industry"
                    type: "Industry"
                returnValue:
                  - type: "Company"
                    singleValue: "false"
              - name: "findByType"
                queryName: "findCompaniesByType"
                type: "Normal"
                generateStubQueryHandler: "true"
                generateStubEventHandler: "true"
                inputArgs:
                  - name: "type"
                    type: "CompanyType"
                returnValue:
                  - type: "Company"
                    singleValue: "false"
      events:
          - componentName: "CompanyWideNotification"
            affiliate: "Company" #must exist in entity declaration
            data: "INTRINSICS_ONLY" #ALL, INTRINSICS_ONLY, ASSOCIATIONS_ONLY or comma delim list of attributes and/or role names as defined within Entity
            emitterType: CompanyNotification #if provided, will create a data class by the same name, a subscriber class and emit the current instance of the affiliate
            persistent: true #true/false forces the affilate to be saved (one of the attributes must be the Id...if null will cause an insert, otherwise an update
            