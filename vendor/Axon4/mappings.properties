#------------------------------------------------------------------------------
# Harbormaster
# 2021 Harbormaster, Inc.
# All Rights Reserved.
# 
# This file is subject to the terms and conditions defined in
# file 'license.txt', which is part of this source code package.
#  
# Contributors :
#       Harbormaster Dev Team - General Release
#-------------------------------------------------------------------------------

#rootLevelMappings()

#------------------------------------------------------------------------------
## CI/CD Platforms
#------------------------------------------------------------------------------
#determineCICDPlatformFiles()

#------------------------------------------------------------------------------
## application 
#------------------------------------------------------------------------------
Application.java=.src.main.java.$packageName

#------------------------------------------------------------------------------
## kotlin
#------------------------------------------------------------------------------
commands.kt=.src.main.kotlin.$packageName.api
entities.kt=.src.main.kotlin.$packageName.entity
events.kt=.src.main.kotlin.$packageName.api
queries.kt=.src.main.kotlin.$packageName.query
#if ( $aib.getEnumClassesToGenerate().size() > 0 )
enums.kt=.src.main.kotlin.$packageName.enum
#end##if ( $aib.getEnumClassesToGenerate().size() > 0 )
#if ( $aib.getValueObjectsToGenerate().size() > 0 )
valueobjects.kt=.src.main.kotlin.$packageName.valueobject
#end##if ( $aib.getValueObjectsToGenerate().size() > 0 )

#------------------------------------------------------------------------------
## aggregate
#------------------------------------------------------------------------------
__classes__Aggregate.java=.src.main.java.$packageName.aggregate

#------------------------------------------------------------------------------
## config
#------------------------------------------------------------------------------
AxonConfig.java=.src.main.java.$packageName.config|AxonConfig.java
SnapshotConfig.java=.src.main.java.$packageName.config
#if( $aib.getParam( "axon-framework.event-store-type") == "mongodb" || $aib.getParam( "axon-framework.entity-store-type") == "mongodb" )
MongoDBConfig.java=.src.main.java.$packageName.config
#end##if( $aib.getParam( "axon-framework.event-store-type") == "mongodb" || $aib.getParam( "axon-framework.entity-store-type") == "mongodb" )
#if( $aib.getParam( "axon-framework.event-store-type").contains("jpa") )
JPAConfig.java=.src.main.java.$packageName.config
#end##if( $aib.getParam( "axon-framework.event-store-type").contains("jpa") )
#if ( $aib.getParam( "axon-framework.enableDiscoveryClient" ) == true )
CommandRouterConfig.java=.src.main.java.$packageName.config
#end##if ( $aib.getParam( "axon-framework.enableDiscoveryClient" ) == true )

#------------------------------------------------------------------------------
## rest controller
#------------------------------------------------------------------------------
BaseSpringRestController.java=.cqrs.src.main.java.$packageName.controller
*QueryRestController.java=.cqrs.src.main.java.$packageName.controller.query
*CommandRestController.java=.cqrs.src.main.java.$packageName.controller.command

#------------------------------------------------------------------------------
## delegate
#------------------------------------------------------------------------------
*Delegate.java=.src.main.java.$packageName.delegate

#------------------------------------------------------------------------------
## properties
#------------------------------------------------------------------------------
application.properties=.src.main.resources
axonserver.properties=.src.main.resources

#------------------------------------------------------------------------------
## query and entity handling via projection
#------------------------------------------------------------------------------
__classes__Projector.java=src.main.java.$packageName.projector
__classes__EntityProjector.java=src.main.java.$packageName.projector

#------------------------------------------------------------------------------
## validator
#------------------------------------------------------------------------------
__classes__Validator.java=.src.main.java.$packageName.validator

#------------------------------------------------------------------------------
## repository
#------------------------------------------------------------------------------
__classes__Repository.java=.src.main.java.$packageName.repository

#------------------------------------------------------------------------------
## subscriber
#------------------------------------------------------------------------------
*Subscriber.java=.src.main.java.$packageName.subscriber

#if ( $aib.getParam("axon-framework.event-store-type").contains("jpa") )
#------------------------------------------------------------------------------
## persistence.xml
#------------------------------------------------------------------------------
persistence.xml=.src.main.resources.META-INF

#------------------------------------------------------------------------------
## providers
#------------------------------------------------------------------------------
*Provider.java=.src.main.java.$packageName.provider
#end##if ( $aib.getParam("axon-framework.event-store-type").contains("jpa") )

#------------------------------------------------------------------------------
## docker
#------------------------------------------------------------------------------
Dockerfile=.

#------------------------------------------------------------------------------
## kubernetes
#------------------------------------------------------------------------------
axonserver.yaml=deploy.kubernetes

#------------------------------------------------------------------------------
## Exceptions
#------------------------------------------------------------------------------
*Exception.java=.src.main.java.$packageName.exception

#------------------------------------------------------------------------------
## Junit test 
#------------------------------------------------------------------------------
BaseTest.java=.src.main.java.$packageName.test
__classes__Test.java=.src.main.java.$packageName.test


#if ( $aib.getParam( "axon-framework.generateEurekaDiscoveryServer" ) == true )
#------------------------------------------------------------------------------
## Junit test 
#------------------------------------------------------------------------------
eureka-server-pom.xml=.src.eurekaserver
ServiceRegistrationAndDiscoveryServiceApplication.java=.src.eurekaserver.src.main.java.$packageName
application-eureka-server.properties=.src.eurekaserver.src.main.resources
#end##if ( $aib.getParam( "axon-framework.generateEurekaDiscoveryServer" ) == true )

## a comma delim list of directories and files not to process mapping wise, but instead use the directory found in to locate in the destination
## if applying a directory structure, be sure to use \\ and not \ and be sure to put it in the beginning AND the end
## do not do this gradefiles
## do not do this \gradlefiles\build
## DO THIS \\gradlefiles\\build
#map.directly.from.source=\\gradlefiles\\build\\
map.directly.from.source=\\source\\files\\,build.gradle,\\gradlefiles\\build\\
## exclusions, includes this file
exclusions=mappings.properties,options.xml,settings.xml